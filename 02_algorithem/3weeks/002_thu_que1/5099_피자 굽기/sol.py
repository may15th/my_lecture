'''
※ SW Expert 아카데미의 문제를 무단 복제하는 것을 금지합니다.

N개의 피자를 동시에 구울 수 있는 화덕이 있다. 피자는 치즈가 모두 녹으면 화덕에서 꺼내며, 치즈의 양은 피자마다 다르다.
1번부터 M번까지 M개의 피자를 순서대로 화덕에 넣을 때, 치즈의 양에 따라 녹는 시간이 다르기 때문에 꺼내지는 순서는 바뀔 수 있다.
주어진 조건에 따라 피자를 구울 때, 화덕에 가장 마지막까지 남아있는 피자 번호를 알아내는 프로그램을 작성하시오.

- 피자는 1번위치에서 넣거나 뺄 수 있다.
- 화덕 내부의 피자받침은 천천히 회전해서 1번에서 잠시 꺼내 치즈를 확인하고 다시 같은 자리에 넣을 수 있다.
- M개의 피자에 처음 뿌려진 치즈의 양이 주어지고, 화덕을 한 바퀴 돌 때 녹지않은 치즈의 양은 반으로 줄어든다. 이전 치즈의 양을 C라고 하면 다시 꺼냈을 때 C//2로 줄어든다.
- 치즈가 모두 녹아 0이 되면 화덕에서 꺼내고, 바로 그 자리에 남은 피자를 순서대로 넣는다.


[입력]
첫 줄에 테스트 케이스 개수 T가 주어진다.  1<=T<=50
다음 줄부터 테스트 케이스의 첫 줄에 화덕의 크기 N과 피자 개수 M이 주어지고, 다음 줄에 M개의 피자에 뿌려진 치즈의 양을 나타내는 Ci가 주어진다.
3<=N<=20, N<=M<=100, 1<=Ci<=20

[출력]
각 줄마다 "#T" (T는 테스트 케이스 번호)를 출력한 뒤, 번호를 출력한다.
'''
'''
출력
#1 4
#2 8
#3 6
'''
import sys
sys.stdin = open('input.txt')

#인덱스 번호도 같이 리스트에 넣어주는 게 핵심 아이디어

T = int(input())
for tc in range(1, T+1):

    N, M = map(int, input().split())
    Ci = list(map(int, input().split()))

    cheese = []
    # 입력된 치즈양에 인덱스 더해준다.
    # 인덱스 붙여주는 수 밖에 없다.
    for i in range(M):
        cheese.append([i+1, Ci[i]])

    in_pizza = cheese[:N]
    remain_pizza = cheese[N:]

    while len(in_pizza) > 1:
        check_ = in_pizza.pop(0)
        check_[1] //= 2
        # check[1](남은 치즈양)이 0이면,
        if check_[1] == 0:
            if remain_pizza:    # 남은 피자가 있으면 넣는다
                in_pizza.append(remain_pizza.pop(0))
        else:   # 치즈가 다 안녹았으면 다시 넣는다.
            in_pizza.append(check_)

    print(f'#{tc} {in_pizza[0][0]}')