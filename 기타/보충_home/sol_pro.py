import sys
sys.stdin = open('input.txt')


# 연속된은 range나 list사용하라
# 사고방식을 어떻게 만들지 하는 것
# 2차원은 리스트 안에 리스트 있는 것

# 삼성시의 버스노선

# 노선의 개수를 입력받음

# 노선 정보를 2차원 리스트로 입력받음

# 정류장의 개수를 입력받음

# 정류장을 나타내는 리스트를 생성하고 초기화
  # 노선의 시작부터 끝까지 해당하는 정류장을 1씩 증가시킴
  # 슬라이싱을 이용하여 범위 내 정류장을 선택하고, 모두 1씩 증가시킴
  # 이 범위 내의 모든 정류장을 1씩 증가시켜 해당 노선을 표시함

# 입력된 정류장 번호에 해당하는 리스트의 값을 조회하여 결과를 출력

# 테스트 케이스 입력
T = int(input())
print(T)    #디버깅용

# 먼저 정류장들을 다 만들어놓고 해당 정류장에 특정 노선이 방문하는지
# 기록하는 게 이문제의 목표
# -> bus_stop 정류장
# 버스정류장은 몇 개? 5000.개
# bus_stop = [0] * 5000 # 각각의 인덱스 자리를 정류장으로 보고, 해당 정류장에 방문하면
                        # 기록할거면 0 쓰여진거 5000개 만들어 놓으면 편함
                        # 0으로 잡혀있는 원소 자리들을 1씩 더해주겠다
                        # 기록문제의 전형적인 포멧이라고 생각
# bus_stop = [0] * 5001   #인덱스와 우리의 일반적인 숫자 순서는 일치?
#하나가 차이 나니까... 애초에 1칸을 늘려서 -1 연산을 하지 않는 방향으로
#0으로 잡혀있는 원소 자리들을 1씩 더해주겠다

#버스 스탑은 for tc문 안에 있어야 돼 초기확 계속 새로 돼야 하니깐



# 각 테스트 케이스마다 반복문 실행
for t in range(1, T+1): # 제출할 때 1부터 깔끔하게 나오게
    # 노선의 개수 입력
    bus_stop = [0] * 5001
    N = int(input())    # 버스 노선의 총 개수
    print(N)

    # 노선별 시작지점, 끝 지점
    for _ in range(N):
        ai, bi = map(int, input().split())
        print(ai, bi)       #시작지점, 끝지점
        # 어떠한 노선이 시작지점부터 끝지점까지 방문한다면
        # 해당 범위는 우리가 만든 정류장 리스트에서 슬라이싱을 통해서 지정
        for i in range(ai, bi+1):    # +1? ->레인지나 슬라이싱은 끝점을 포함안하니깐.
            # +1을 해서 끝점까지 포함시키려고...
            bus_stop[i] += 1    #1씩 증가시킨다
        # print(bus_stop)


    P = int(input())    # 방문을 확인할 정류장들의 총 개수

    for _ in range(P):  # _ : 반복문에서 임시변수 안쓰겠다
        # range(P) -> P번 찾아주겠다
        p = int(input())    #각 정류장의 번호
        #1, 2 ,3, 4, 5 .. 로 예시 나와았는데
        # 실제로는 지멋대로 줌.

        print("p", p)    # 조회하고자 하는 버스정류자으이 번호
        print(bus_stop[p], end = ' ')  # 노선이 방문한 횟수
    print() #줄바꿈 처리



    #============여기까지 입력 코드==========

    #============여기부터 푸는 코드==========




